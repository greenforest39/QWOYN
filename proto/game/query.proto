syntax = "proto3";
package cosmichorizon.coho.game;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "game/params.proto";

option go_package = "github.com/cosmic-horizon/coho/x/game/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/cosmichorizon/coho/game/params";
  }
  rpc WhitelistedContracts(QueryWhitelistedContractsRequest) returns (QueryWhitelistedContractsResponse) {
    option (google.api.http).get = "/cosmichorizon/coho/game/whitelisted_contracts";
  }
  rpc InGameNfts(QueryInGameNftsRequest) returns (QueryInGameNftsResponse) {
    option (google.api.http).get = "/cosmichorizon/coho/game/in_game_nfts/{contract}";
  }
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [ (gogoproto.nullable) = false ];
}

message QueryWhitelistedContractsRequest {}
message QueryWhitelistedContractsResponse {
  repeated string contracts = 1;
}

message QueryInGameNftsRequest {
  string contract = 1;
}
message QueryInGameNftsResponse {
  repeated uint64 token_ids = 1;
}
