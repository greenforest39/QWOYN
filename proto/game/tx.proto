syntax = "proto3";
package cosmichorizon.coho.game;

import "cosmos/base/v1beta1/coin.proto";
import "gogoproto/gogo.proto";

option go_package = "github.com/cosmic-horizon/coho/x/game/types";

// Msg defines the Msg service.
service Msg {
  rpc TransferModuleOwnership(MsgTransferModuleOwnership) returns (MsgTransferModuleOwnershipResponse);
  rpc WhitelistNftContracts(MsgWhitelistNftContracts) returns (MsgWhitelistNftContractsResponse);
  rpc RemoveWhitelistedNftContracts(MsgRemoveWhitelistedNftContracts) returns (MsgRemoveWhitelistedNftContractsResponse);
  rpc DepositNft(MsgDepositNft) returns (MsgDepositNftResponse);
  rpc WithdrawUpdatedNft(MsgWithdrawUpdatedNft) returns (MsgWithdrawUpdatedNftResponse);
  rpc DepositToken(MsgDepositToken) returns (MsgDepositTokenResponse);
  rpc WithdrawToken(MsgWithdrawToken) returns (MsgWithdrawTokenResponse);
  rpc StakeInGameToken(MsgStakeInGameToken) returns (MsgStakeInGameTokenResponse);
  rpc BeginUnstakeInGameToken(MsgBeginUnstakeInGameToken) returns (MsgBeginUnstakeInGameTokenResponse);
  rpc ClaimInGameStakingReward(MsgClaimInGameStakingReward) returns (MsgClaimInGameStakingRewardResponse);
  rpc AddLiquidity(MsgAddLiquidity) returns (MsgAddLiquidityResponse);
  rpc RemoveLiquidity(MsgRemoveLiquidity) returns (MsgRemoveLiquidityResponse);
  rpc Swap(MsgSwap) returns (MsgSwapResponse);
}

message MsgTransferModuleOwnership {
    string sender = 1;
    string newOwner = 2;
}
message MsgTransferModuleOwnershipResponse {}

message MsgWhitelistNftContracts {
    string sender = 1;
    repeated string contracts = 2;
}
message MsgWhitelistNftContractsResponse {}

message MsgRemoveWhitelistedNftContracts {
  string sender = 1;
  repeated string contracts = 2;
}
message MsgRemoveWhitelistedNftContractsResponse {}

message MsgDepositNft {
  string sender = 1;
  string contract = 2;
  uint64 token_id = 3;
}
message MsgDepositNftResponse {}

message TokenInfoExtension {
}

message MsgSignerWithdrawUpdatedNft {
  string sender = 1;
  string contract = 2;
  uint64 token_id = 3;
  string exec_msg = 4;
}

message MsgWithdrawUpdatedNft {
  string sender = 1;
  string contract = 2;
  uint64 token_id = 3;
  string exec_msg = 4;
  bytes signature = 5;
}
message MsgWithdrawUpdatedNftResponse {}

message MsgDepositToken {
  string sender = 1;
  cosmos.base.v1beta1.Coin amount = 2 [ (gogoproto.nullable) = false ];
}
message MsgDepositTokenResponse {}

message MsgWithdrawToken {
  string sender = 1;
  cosmos.base.v1beta1.Coin amount = 2 [(gogoproto.nullable) = false];
}
message MsgWithdrawTokenResponse {}

message MsgStakeInGameToken {
  string sender = 1;
  cosmos.base.v1beta1.Coin amount = 2 [ (gogoproto.nullable) = false ];
}
message MsgStakeInGameTokenResponse {}

message MsgBeginUnstakeInGameToken {
  string sender = 1;
  cosmos.base.v1beta1.Coin amount = 2 [ (gogoproto.nullable) = false ];
}
message MsgBeginUnstakeInGameTokenResponse {}

message MsgClaimInGameStakingReward {
  string sender = 1;
}
message MsgClaimInGameStakingRewardResponse {}

message MsgAddLiquidity {
  string sender = 1;
  repeated cosmos.base.v1beta1.Coin amounts = 2 [ (gogoproto.nullable) = false ];
}
message MsgAddLiquidityResponse {}

message MsgRemoveLiquidity {
  string sender = 1;
  repeated cosmos.base.v1beta1.Coin amounts = 2 [ (gogoproto.nullable) = false ];
}
message MsgRemoveLiquidityResponse {}

message MsgSwap {
  string sender = 1;
  cosmos.base.v1beta1.Coin amount = 2 [ (gogoproto.nullable) = false ];
}
message MsgSwapResponse {}
